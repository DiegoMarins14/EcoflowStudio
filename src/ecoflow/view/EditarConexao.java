/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecoflow.view;

import ecoflow.controle.ControleConexao;
import ecoflow.modelo.Conexao;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.wimpi.modbus.net.TCPMasterConnection;

/**
 *
 * @author vinicius
 */
public class EditarConexao extends javax.swing.JInternalFrame {
    
    private final String IP = "192.168.1.8";
    private final int PORTA = 502;
    private final int TIMEOUT = 4000;
    
    private ControleConexao controleConexao = new ControleConexao();
    private Conexao         conexao         = new Conexao();
    
    private static TCPMasterConnection tcp;
    
    /**
     * Creates new form EditarConexao
     */
    public EditarConexao() {
        initComponents();
                
        //Busca parametros no arquivo properties
        conexao = controleConexao.getConexao();
        
        //Preenche os campos textField
        tfIp.setText(conexao.getIp() );
        tfPorta.setText(Integer.toString(conexao.getPorta() ) );
        tfTimeOut.setText(Integer.toString(conexao.getTimeOut() ) );
        
        //Fechar Janela
        /*
        this.addInternalFrameListener(new InternalFrameAdapter() {
            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                if(tcp != null){
                    System.out.println("Passou");
                    tcp.close();
                }
                super.internalFrameClosed(e); //To change body of generated methods, choose Tools | Templates.
            }
            
        });
        */
        
    }
     
    private Boolean setConexao(){
        //Verifica se campos não estão nulos
        if(
            !tfIp.getText().trim().isEmpty() && 
            !tfPorta.getText().trim().isEmpty() &&
            !tfTimeOut.getText().trim().isEmpty()
        ){
            //Configura objeto conexão
            conexao.setIp(tfIp.getText().trim() );
            conexao.setPorta(Integer.parseInt(tfPorta.getText().trim() ) );
            conexao.setTimeOut(Integer.parseInt(tfTimeOut.getText().trim() ) );
            
            try {
                //Edita o arquivos properties
                controleConexao.setConexao(conexao);
                return true;
            } catch (IOException ex) {
                Logger.getLogger(EditarConexao.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }
        }
        return false;
    }
    
    private Boolean setConexaoPadrao(){
        //Verifica se campos não estão nulos
        
        //Edita textfield
        tfIp.setText(IP);
        tfPorta.setText( Integer.toString(PORTA) );
        tfTimeOut.setText( Integer.toString(TIMEOUT) );
       
        //Configura objeto conexão
        conexao.setIp(IP);
        conexao.setPorta(PORTA);
        conexao.setTimeOut(TIMEOUT);

        try {
            //Edita o arquivos properties
            controleConexao.setConexao(conexao);
            return true;
        } catch (IOException ex) {
            Logger.getLogger(EditarConexao.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
                
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfIp = new javax.swing.JTextField();
        tfPorta = new javax.swing.JTextField();
        btAplicar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tfTimeOut = new javax.swing.JTextField();
        btTestarConexao = new javax.swing.JButton();
        btPadrao = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("IP:");

        jLabel2.setText("Porta:");

        tfIp.setNextFocusableComponent(tfPorta);
        tfIp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfIpKeyPressed(evt);
            }
        });

        tfPorta.setNextFocusableComponent(tfTimeOut);
        tfPorta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPortaKeyPressed(evt);
            }
        });

        btAplicar.setText("Aplicar");
        btAplicar.setNextFocusableComponent(btTestarConexao);
        btAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAplicarActionPerformed(evt);
            }
        });
        btAplicar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btAplicarKeyPressed(evt);
            }
        });

        jLabel3.setText("TimeOut:");

        tfTimeOut.setNextFocusableComponent(btAplicar);
        tfTimeOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTimeOutKeyPressed(evt);
            }
        });

        btTestarConexao.setText("Testar Conexão");
        btTestarConexao.setNextFocusableComponent(tfIp);
        btTestarConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTestarConexaoActionPerformed(evt);
            }
        });
        btTestarConexao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btTestarConexaoKeyPressed(evt);
            }
        });

        btPadrao.setText("Padrão");
        btPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPadraoActionPerformed(evt);
            }
        });
        btPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btPadraoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfIp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btPadrao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btTestarConexao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAplicar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(tfTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAplicar)
                    .addComponent(btTestarConexao)
                    .addComponent(btPadrao))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAplicarActionPerformed
        if(setConexao() ){
            JOptionPane.showMessageDialog(null, "Configurações salvo com sucesso", "Infomativo", JOptionPane.INFORMATION_MESSAGE);
            controleConexao.setTcpMasterConnection(null); // Remove conexão anterior
        }else{
            JOptionPane.showMessageDialog(null, "Problemas ao salvar no arquivo de configurações", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAplicarActionPerformed

    private void btTestarConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTestarConexaoActionPerformed
        // TODO add your handling code here:
        setConexao();
        try {
            controleConexao.setTcpMasterConnection(null); //Remove conexões anteriores
            tcp = controleConexao.getTcpMasterConnection(); // Cria uma nova conexão
            if(controleConexao.testarConexao() ){
                JOptionPane.showMessageDialog(null, "Conexão com sucesso.", "Informativo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(EditarConexao.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Problema na conexão!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btTestarConexaoActionPerformed

    private void btTestarConexaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btTestarConexaoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           btTestarConexao.doClick();
       }
    }//GEN-LAST:event_btTestarConexaoKeyPressed

    private void btAplicarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btAplicarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           btAplicar.doClick();
       }
    }//GEN-LAST:event_btAplicarKeyPressed

    private void tfIpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIpKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           btAplicar.doClick();
       }
    }//GEN-LAST:event_tfIpKeyPressed

    private void tfPortaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPortaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           btAplicar.doClick();
       }
    }//GEN-LAST:event_tfPortaKeyPressed

    private void tfTimeOutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimeOutKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           btAplicar.doClick();
       }
    }//GEN-LAST:event_tfTimeOutKeyPressed

    private void btPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPadraoActionPerformed
        // TODO add your handling code here:
        if(setConexaoPadrao() ){
            JOptionPane.showMessageDialog(null, "Configurações salvo com sucesso", "Infomativo", JOptionPane.INFORMATION_MESSAGE);
            controleConexao.setTcpMasterConnection(null); // Remove conexão anterior
        }else{
            JOptionPane.showMessageDialog(null, "Problemas ao salvar no arquivo de configurações", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btPadraoActionPerformed

    private void btPadraoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btPadraoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           btPadrao.doClick();
       }
    }//GEN-LAST:event_btPadraoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAplicar;
    private javax.swing.JButton btPadrao;
    private javax.swing.JButton btTestarConexao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfIp;
    private javax.swing.JTextField tfPorta;
    private javax.swing.JTextField tfTimeOut;
    // End of variables declaration//GEN-END:variables
}
